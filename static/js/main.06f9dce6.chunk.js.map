{"version":3,"sources":["components/NavBar/NavBar.js","components/Footer/Footer.js","components/Jumbotron/Jumbotron.js","components/ImgCard/ImgCard.js","components/Flex/Flex.js","components/ImgCard/imageDetails.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","className","href","clickResponse","yourPoints","highScore","Footer","Jumbotron","ImgCard","console","log","style","width","src","alt","altTxt","onClick","handleClick","Flex","children","allImages","id","image","App","state","clickedIds","cardsArray","imageDetails","this","includes","setState","gameOver","prevState","Math","max","counter","increment","newDeck","shuffleCards","array","i","length","j","floor","random","temp","map","img","key","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.06f9dce6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction NavBar(props) {\n  return (\n    <div className=\"sticky\">\n      <nav className=\"navbar navbar-light bg-light\">\n        <a className=\"navbar-brand\" href=\"#\">\n          Click | Reward\n        </a>\n        <div>\n          <span className=\"clickResponse\">{props.clickResponse}</span>\n          <span className=\"score\">Your Points: {props.yourPoints}</span>\n          <span className=\"high-score\">High Score: {props.highScore}</span>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <div>\n      <footer className=\"text-muted\">\n        <div className=\"footer\">\n          <p className=\"thanks\">\n            <a href=\"#\">Thanks for playing Click | Reward!</a>\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid\">\n      <div className=\"jumbo\">\n        <h1 className=\"display-4\">Clicker Training Game</h1>\n        <p className=\"lead\">\n          The clicker method of training is a tried, true and fun method of\n          teaching your dog good social behavior. Click on any dog to begin.{\" \"}\n          <br></br>\n          (But each dog only gets one CLICK | REWARD per game!)\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ImgCard(props) {\n  console.log(props);\n  return (\n    <div className=\"card\" style={{ width: \"18rem\" }}>\n      <img src={props.src} className=\"card-img-top\" alt={props.altTxt} />\n      <div className=\"card-body\">\n        <p className=\"card-text\"></p>\n        <div className=\"button\" onClick={props.handleClick}>\n          <a href=\"#test\" className=\"btn btn-primary\">\n            click | reward\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImgCard;\n\n// function ImgCard(props) {\n//   return (\n//     <div className=\"card\">\n//       <img\n//         src={props.src}\n//         className=\"card-img-top\"\n//         alt={props.altTxt}\n//         imgid={props.id}\n//         onClick={() => props.handleGuess(props.id)}\n//       />\n//     </div>\n//   );\n// }\n\n// export default ImgCard;\n","import React from \"react\";\nimport \"./style.css\";\n\n// const styles = {\n//   alignItems: \"center\",\n//   display: \"flex\",\n//   justifyContent: \"center\"\n// };\n\nfunction Flex(props) {\n  return <div className=\"flex\">{props.children}</div>;\n}\n\nexport default Flex;\n","export default {\n  allImages: [\n    {\n      id: \"0\",\n      altTxt: \"Beagle\",\n      // image: \"./ImgCard/images/gracie.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTDv7HmAFmtg7ny0MasxUTi5KI-xJib1pSWL_ymfNjtQVZeaIDr\"\n    },\n    {\n      id: \"1\",\n      altTxt: \"Coon Hound\",\n      // image: \"images/coonHound.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTT_5_4bRV6KFLrVgf25kQzAnqmDaR1lFAMeEC9sEg-W-kLl_gk\"\n    },\n    {\n      id: \"2\",\n      altTxt: \"Cardigan Welsh Corgie\",\n      // image: \"./images/corgy.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQKX05zhcMC-OZM2qScw-QRxFMp4us3zpfku-mEShChwVVVMWsT\"\n    },\n    {\n      id: \"3\",\n      altTxt: \"Rhodesian Ridgeback\",\n      // image: \"./images/ridgeback.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcShu-0gTVHy-5g2iLuWD9rjjDHvVEwxV_T-tiP9REtcA1FH-jaT \"\n    },\n    {\n      id: \"4\",\n      altTxt: \"Shiba Enu\",\n      // image: \"./images/shiba.jpg\"\n\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRpgPVICvYnc7uRiGkQKv-U4g3mNhdfXzCyrFeyYdG1b8_Ohlrx\"\n    },\n    {\n      id: \"5\",\n      altTxt: \"dog with thought bubble\",\n      // image: \"./images/silly.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcR_KlSsgfOdFymiGimfUy1A_APluD1SS8-LsrZMD_A1VofXn8cW\"\n    },\n    {\n      id: \"6\",\n      altTxt: \"Beagle\",\n      // image: \"./images/gracie_2.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQT8350Z2XSX5JxhSXyAWrhwziVmh9DnM6YnWM9Zbjz3Xj1G2sK\"\n    },\n    {\n      id: \"7\",\n      altTxt: \"talking dog\",\n      // image: \"./images/clickTreat.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRS57unonbTkloVcfOeiV1y5O7YU8awPwvcCGraJXbcB-BXQz6L\"\n    },\n    {\n      id: \"8\",\n      altTxt: \"Shepherd pup\",\n      // image: \"./images/major.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRjSxxr2nF-_YTWlJP9YGiHRdPxgviwaFnfgDwR35p_PJRjDHXs\"\n    },\n    {\n      id: \"9\",\n      altTxt: \"Basenji\",\n      // image: \"./images/basenji.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS-kG8GR5G7Ck0_VUW5WxLT33YDcw4TDJZmdPZshO1qdnk9vKYx\"\n    },\n    {\n      id: \"10\",\n      altTxt: \"Bernese Mountain pup\",\n      // image: \"./images/zoe.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcS7-trRfIvO_wrAmSVpV_sH0KHwOIFTyhMhu9VGEjqgp_vXSycc\"\n    },\n    {\n      id: \"11\",\n      altTxt: \"Aussie Shepherd Mix\",\n      // image: \"./images/maisy.jpg\"\n      image:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRsPx0A2C5QAcN9wKJ6OEc_zKJ-8LUedCgewzcdc9qH2mIP9VJB\"\n    }\n  ]\n};\n","// all components get imported into this file - wraps it all together\n\nimport React from \"react\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Footer from \"./components/Footer/Footer\";\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\n// import GameContainer from \"./components/GameContainer/GameContainer\";\nimport ImgCard from \"./components/ImgCard/ImgCard\";\nimport Flex from \"./components/Flex/Flex\";\n// import allImages from \"./components/ImgCard/imageDetails\";\nimport imageDetails from \"./components/ImgCard/imageDetails\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      yourPoints: 0,\n      highScore: 0,\n      clickedIds: [],\n      cardsArray: imageDetails.allImages,\n      clickResponse: \"Click any pup to begin — but only one treat per game!\"\n    };\n  }\n\n  // this function will update the state in the parent \"App\"\n  handleClick(id) {\n    debugger;\n    console.log(this.state.clickedIds);\n    console.log(id);\n    // can use if else to see if user pressed same dog twice\n    if (this.state.clickedIds.includes(id)) {\n      this.setState({\n        clickResponse: \"Sorry, game over! Only one treat per game!\"\n      });\n      this.gameOver();\n      return;\n    }\n\n    this.setState(prevState => ({\n      yourPoints: prevState.yourPoints + 1,\n      highScore: Math.max(prevState.yourPoints + 1,this.state.highScore),\n      clickResponse: \"Great job! Keep on treating new pups!\"\n    }));\n\n    this.setState((prevState, props) => ({\n      counter: prevState.counter + props.increment\n    }));\n    // this will pull everything in the array- the clicked pics and add them all into a new array\n    this.setState({ clickedIds: [...this.state.clickedIds, id] });\n\n    // if (this.state.yourPoints >= this.state.highScore) {\n    //   this.setState({ highScore: this.state.yourPoints });\n    // }\n\n    let newDeck = this.shuffleCards(this.state.cardsArray);\n    this.setState({ cardsArray: newDeck });\n\n    // this.setState({ clickResponse:clickResponse }); this way of expressing required var def\n  }\n\n  // reset yourPoints to \"0\" alert user, chose twice, reset clicked id's\n  gameOver() {\n    this.setState({ yourPoints: 0 });\n    // alert(\"sorry, you rewarded twice, start new game!\");\n    this.setState({ clickedIds: [] });\n  }\n\n  // need array param as placeholder\n  shuffleCards(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar\n          yourPoints={this.state.yourPoints}\n          highScore={this.state.highScore}\n          clickResponse={this.state.clickResponse}\n        />\n        <Jumbotron />\n        {/* <GameContainer /> */}\n        {/* <allImages /> */}\n        <Flex>\n          {imageDetails.allImages.map(img => {\n            return (\n              <ImgCard\n                altTxt={img.altTxt}\n                id={img.id}\n                src={img.image}\n                key={img.id}\n                handleClick={() => this.handleClick(img.id)}\n              />\n            );\n          })}\n\n          {/*   // randomize the images array with sort method */}\n          {/* handle whether user selected the same dog twice */}\n          {/* keep track of how many games won, \"highest score\" */}\n          {/* if user selects same dog, reset game to 0, do not add to high score*/}\n        </Flex>\n        <Flex />\n\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// line 9 grabs the app - this file came pre-installed\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}